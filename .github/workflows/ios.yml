name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Default Scheme
        id: set_scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          scheme=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo "Using default scheme: $scheme"
          echo $scheme >default
          echo "scheme=$scheme" >> $GITHUB_ENV

      - name: Cache Swift Package Manager packages
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/org.swift.swiftpm
            ~/.swiftpm
          key: ${{ runner.os }}-swift-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-swift-

      - name: Build
        run: |
          echo "Using scheme: ${{ env.scheme }}"
          max_retries=3
          count=0
          until xcodebuild build-for-testing -scheme "${{ env.scheme }}" -destination "platform=iOS Simulator,name=Any available iPhone simulator"; do
            count=$(($count+1))
            if [ $count -ge $max_retries ]; then
              echo "Attempt $count failed and there are no more retries left."
              exit 1
            fi
            echo "Attempt $count failed! Trying again in 15 seconds..."
            sleep 15
          done

      - name: Test
        run: |
          echo "Using scheme: ${{ env.scheme }}"
          max_retries=3
          count=0
          until xcodebuild test-without-building -scheme "${{ env.scheme }}" -destination "platform=iOS Simulator,name=Any available iPhone simulator"; do
            count=$(($count+1))
            if [ $count -ge $max_retries ]; then
              echo "Attempt $count failed and there are no more retries left."
              exit 1
            fi
            echo "Attempt $count failed! Trying again in 15 seconds..."
            sleep 15
          done
